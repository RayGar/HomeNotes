/* This is a work is a work in progress. What it is, is our AWS Lambda script, written in javascript and using the alexa skillskit API - Ray*/


"use strict";

var Alexa = require("alexa-sdk");																	// this calls the API, Alexa Skills Kit

var handlers = {																					// this is an object that handles the intent requests
  "LaunchRequest": function () {																	// inside the handlers object, we have function definitions
    var initiationMssg =  "Welcome for the first time to home notes..." +
	"Use this skill to share messages between the members of your household..." +
	"Every time you launch home notes you will be asked to indicate what is called your action..." +
	"For the action you may choose to create a note, delete a note, or look up notes that other users may have left for you..." +
	"Once you have chosen to record a note, I will ask you who the note is for, then you will specify the name of the user, who will recieve the note..." +
	"and finally you will then utter the note to be recorded..." + 
	"We recommend you create notes that are short, concise, creative, polite, useful and in plain language..." +
	"Now, what action do you wish to take?";
        
																// of an execution they must be initiated in this intent
	
	if(Object.keys(this.attributes).length === 0) {
	    this.attributes['currentAciton'] = "";
		this.attributes['noteListLength'] = 0;
	    
	    this.response.speak(initiationMssg)
	        .listen("Sorry I did not hear that. Please repeat the action you wish to take");
	}
	else {
	this.response.speak("Welcome back to home notes. What action do you wish to take.") 					// API object method that can use the Echo's speakers to say the argument
		.listen("Sorry I did not hear that. Please repeat the action you wish to take");			// repeat if needed
	}
	this.emit(':responseReady');
  },
  "ActionIntent": function () {																	 	// this intent executes after LaunchRequest, it handles the actions
	var userAction = this.event.request.intent.slots.action.value;									// save the user action from the JSON slot
	this.attributes['currentAction'] = userAction;													// save it in its session variable too
	this.response.speak("I will now initiate the action " + userAction	+ " with you.");			// output the action so that the user knows he got the right action
	  
    this.emit(':responseReady');
  },
  
   // Stop
  'AMAZON.StopIntent': function() {
      this.response.speak('Ok, let\'s play again soon.');
      this.emit(':responseReady');
  },

  // Cancel
  'AMAZON.CancelIntent': function() {
      this.response.speak('Ok, let\'s play again soon.');
      this.emit(':responseReady');
  },

  // Save state
  'SessionEndedRequest': function() {
    console.log('session ended!');
    this.emit(':saveState', true);
  }
};

exports.handler = function(event, context, callback){												//every lambda function needs this, not just Alexa, AWS calls it everytime someone uses our skill
  var alexa = Alexa.handler(event, context);														//setup the Alexa object
    alexa.registerHandlers(handlers);																//register the handlers we wrote in the preceding block
    //alexa.dynamoDBTableName = 'NotesTable';
    alexa.execute();																				//calls the Alexa code
};
/* index.js: HomeNote's lambda function */


"use strict";

var Alexa = require("alexa-sdk");																	// this calls the API, Alexa Skills Kit

var reask = "Now what action do you wish to take next?";

var handlers = {																					// this is an object that handles the intent requests
    "LaunchRequest": function () {
      
        if(Object.keys(this.attributes).length === 0) {
            this.attributes['users'] = [];
            this.response.speak("Welcome for the first time to home notes... What action do you wish to take?")
                .listen("Sorry I did not hear that. Please repeat the action you wish to take.");
        } else {
            this.response.speak("Welcome back to home notes ... What action do you wish to take?")
                .listen("Sorry I did not hear that. Please repeat the action you wish to take.");
        }
	    
	    
	this.emit(':responseReady');
  },
  
	"DeleteNotesIntent": function() {
		this.response.speak("You have chosen to delete a note. " + reask)
			.listen("Sorry, I did not catch that... Please repeat.");
		this.emit(':responseReady');
	},
	
	"PlayNotesIntent": function() {
		this.response.speak("You have chosen to play the notes left to you." + reask)
			.listen("Sorry, I did not catch that... Please repeat.");
		this.emit(':responseReady');
	},
	
	'RegisterUserIntent': function() {
		var currUser = this.event.request.intent.slots.User.value;
		this.attributes['users'].push(currUser);
		
		this.response.speak("I shall now address you as " + currUser + reask)
		    .listen("Sorry. I didn't hear that please repeat the action you wish to take next.");
		
		this.emit(':responseReady');
	},
	
	  
	  
   // Stop
  'AMAZON.StopIntent': function() {
      this.response.speak('Ok, let\'s play again soon.');
      this.emit(':responseReady');
  },

  // Cancel
  'AMAZON.CancelIntent': function() {
      this.response.speak('Ok, let\'s play again soon.');
      this.emit(':responseReady');
  },

  // Save state
  'SessionEndedRequest': function() {
    console.log('session ended!');
    this.emit(':saveState', true);
  }
};

exports.handler = function(event, context, callback){												//every lambda function needs this, not just Alexa, AWS calls it everytime someone uses our skill
  var alexa = Alexa.handler(event, context);														//setup the Alexa object
    alexa.registerHandlers(handlers);																//register the handlers we wrote in the preceding block
    alexa.execute();																				//calls the Alexa code
};